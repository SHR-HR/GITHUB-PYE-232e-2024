'''
–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–æ–º–∞—à–Ω–µ–π-–†–∞–±–æ—Ç—ã: 09 - –§–ï–í–†–ê–õ–Ø - 10 –§–ï–í–†–ê–õ–Ø 2024 –≥–æ–¥–∞.
'''
'''
–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞

–ö—É—Ä—Å: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Python, —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –§—Ä–µ–π–º–≤–æ—Ä–∫–∞ Django
–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python

–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ ‚Ññ32: –ü—Ä–æ–≥—Ä–∞–º–º—ã —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º (GUI) - tkinter –∏ pyqt6

–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è:

–ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
–ü—É–Ω–∫—Ç—ã:

‚úì 1. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –∫–æ–¥ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤".

‚úì 2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å 
–Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã - –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è "–°–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤".

‚úì 3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –µ–π –≤–≤–µ–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–∞–∫–∏–µ –∫–∞–∫:

- –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ
- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
- –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
- –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
- Email –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã
- Instagram –∞–∫–∫–∞—É–Ω—Ç
- Facebook –∞–∫–∫–∞—É–Ω—Ç
- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É

‚úì 4. –¢–∞–∫–∂–µ –Ω–µ –º–∞–ª–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏, –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ –∏,
–∏–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å 
–∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∫ –∫–∞–∫–æ–π –∏–∑ –≥—Ä—É–ø–ø - –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç.

(–ü—Ä–∏–º–µ—Ä—ã –≥—Ä—É–ø–ø: "–°–µ–º—å—è", "–ë–ª–∏–∑–∫–∏–µ –†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏", "–î–∞–ª—å–Ω–∏–µ –†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏", "–î—Ä—É–∑—å—è", "–ö–æ–ª–ª–µ–≥–∏ –ø–æ —Ä–∞–±–æ—Ç–µ",
"–ù–∞—á–∞–ª—å—Å—Ç–≤–æ", "–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å", "–ê–ø—Ç–µ–∫–∞", "–î–æ—Å—Ç–∞–≤–∫–∞ –ï–¥—ã", "–î–æ—Å—Ç–∞–≤–∫–∞ (—Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤)", "–£—Å–ª—É–≥–∏",
"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ", "–ú–æ—à–µ–Ω–Ω–∏–∫–∏", "–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫").


‚úì 5. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–æ–≥–ª–∏ –ø–æ–º–µ—á–∞—Ç—å—Å—è –∫–∞–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
–∫–æ–Ω—Ç–∞–∫—Ç—ã - –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "‚òÖ" –∏–ª–∏ "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ" –ø—Ä–∏ –º–æ–º–µ–Ω—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞.

‚úì 6. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º - –Ω–∞–∂–∞—Ç–∏–µ–º 
–Ω–∞ –∫–Ω–æ–ø–∫—É "üîó" –∏–ª–∏ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º" - –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π: 
—Ç–∞–∫–∏—Ö –∫–∞–∫ Instagram, Facebook, –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã: Telegram, –∏–ª–∏ WhatsApp.

‚úì 7. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ
–∫–æ–Ω—Ç–∞–∫—Ç–∞ - –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É "+" –∏–ª–∏ "–¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç".

‚úì 8. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ
–∫–æ–Ω—Ç–∞–∫—Ç–∞ - –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É "√ó" –∏–ª–∏ "—É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç".

‚úì 9. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–ª–∏ —É–∂–µ –∏–º–µ—é—â–µ–≥–æ—Å—è 
–∫–æ–Ω—Ç–∞–∫—Ç–∞ - –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úé" –∏–ª–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç".

‚úì 10. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ
–∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–∞–π–ª .xls - –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úì" –∏–ª–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã".

‚úì 11. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫
–∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ - –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É "ü¢Å" –∏–ª–∏ "–ò–∑ —Ñ–∞–π–ª–∞".
'''
'''
–£—Ä–æ–∫ –æ—Ç 14.02.2024
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
–í–ê–†–ò–ê–ù–¢ 1
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
–ö–û–î:
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
import tkinter as tk
from tkinter import messagebox, filedialog
import xlwt
import xlrd

class Contact:
    def __init__(self, first_name, last_name, middle_name, phone,
                 birthday, address, email, instagram, facebook, comment, group, is_favorite=False):
        self.first_name = first_name
        self.last_name = last_name
        self.middle_name = middle_name
        self.phone = phone
        self.birthday = birthday
        self.address = address
        self.email = email
        self.instagram = instagram
        self.facebook = facebook
        self.comment = comment
        self.group = group
        self.is_favorite = is_favorite

class ContactsApp:
    def __init__(self, root):
        self.contacts = []
        self.current_contact_index = None

        self.root = root
        self.root.title("–ú–æ–∏ –ö–æ–Ω—Ç–∞–∫—Ç—ã")

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤
        self.label_first_name = tk.Label(root, text="–ò–º—è:")
        self.label_last_name = tk.Label(root, text="–§–∞–º–∏–ª–∏—è:")
        self.label_middle_name = tk.Label(root, text="–û—Ç—á–µ—Å—Ç–≤–æ:")
        self.label_phone = tk.Label(root, text="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        self.label_birthday = tk.Label(root, text="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:")
        self.label_address = tk.Label(root, text="–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:")
        self.label_email = tk.Label(root, text="Email:")
        self.label_instagram = tk.Label(root, text="Instagram:")
        self.label_facebook = tk.Label(root, text="Facebook:")
        self.label_comment = tk.Label(root, text="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")
        self.label_group = tk.Label(root, text="–ì—Ä—É–ø–ø–∞:")

        self.entry_first_name = tk.Entry(root)
        self.entry_last_name = tk.Entry(root)
        self.entry_middle_name = tk.Entry(root)
        self.entry_phone = tk.Entry(root)
        self.entry_birthday = tk.Entry(root)
        self.entry_address = tk.Entry(root)
        self.entry_email = tk.Entry(root)
        self.entry_instagram = tk.Entry(root)
        self.entry_facebook = tk.Entry(root)
        self.entry_comment = tk.Entry(root)

        self.group_options = ["–°–µ–º—å—è", "–ë–ª–∏–∑–∫–∏–µ –†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏", "–î—Ä—É–∑—å—è", "–ö–æ–ª–ª–µ–≥–∏ –ø–æ —Ä–∞–±–æ—Ç–µ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ"]
        self.group_var = tk.StringVar(root)
        self.group_var.set(self.group_options[0])
        self.group_menu = tk.OptionMenu(root, self.group_var, *self.group_options)

        self.favorite_var = tk.BooleanVar(root)
        self.favorite_var.set(False)
        self.checkbutton_favorite = tk.Checkbutton(root, text="–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", variable=self.favorite_var)

        self.button_save = tk.Button(root, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=self.save_contact)
        self.button_save_all = tk.Button(root, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã", command=self.save_all_contacts)
        self.button_load_from_file = tk.Button(root, text="–ò–∑ —Ñ–∞–π–ª–∞", command=self.load_contacts_from_file)
        self.button_view_contacts = tk.Button(root, text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã", command=self.view_contacts)
        self.button_share_contact = tk.Button(root, text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", command=self.share_contact)

        self.button_add_contact = tk.Button(root, text="–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", command=self.add_contact)
        self.button_delete_contact = tk.Button(root, text="–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", command=self.delete_contact)
        self.button_edit_contact = tk.Button(root, text="–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", command=self.edit_contact)

        # –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        self.listbox = tk.Listbox(root)
        self.listbox.grid(row=17, column=0, columnspan=2)
        self.listbox.bind("<ButtonRelease-1>", self.select_contact)

        self.label_first_name.grid(row=0, column=0)
        self.label_last_name.grid(row=1, column=0)
        self.label_middle_name.grid(row=2, column=0)
        self.label_phone.grid(row=3, column=0)
        self.label_birthday.grid(row=4, column=0)
        self.label_address.grid(row=5, column=0)
        self.label_email.grid(row=6, column=0)
        self.label_instagram.grid(row=7, column=0)
        self.label_facebook.grid(row=8, column=0)
        self.label_comment.grid(row=9, column=0)
        self.label_group.grid(row=10, column=0)

        self.entry_first_name.grid(row=0, column=1)
        self.entry_last_name.grid(row=1, column=1)
        self.entry_middle_name.grid(row=2, column=1)
        self.entry_phone.grid(row=3, column=1)
        self.entry_birthday.grid(row=4, column=1)
        self.entry_address.grid(row=5, column=1)
        self.entry_email.grid(row=6, column=1)
        self.entry_instagram.grid(row=7, column=1)
        self.entry_facebook.grid(row=8, column=1)
        self.entry_comment.grid(row=9, column=1)
        self.group_menu.grid(row=10, column=1)

        self.checkbutton_favorite.grid(row=11, column=1)

        self.button_save.grid(row=12, column=1)
        self.button_save_all.grid(row=13, column=1)
        self.button_load_from_file.grid(row=14, column=1)
        self.button_view_contacts.grid(row=15, column=1)
        self.button_share_contact.grid(row=16, column=1)

        self.button_add_contact.grid(row=12, column=0)
        self.button_delete_contact.grid(row=13, column=0)
        self.button_edit_contact.grid(row=14, column=0)

    def save_contact(self):
        first_name = self.entry_first_name.get()
        last_name = self.entry_last_name.get()
        middle_name = self.entry_middle_name.get()
        phone = self.entry_phone.get()
        birthday = self.entry_birthday.get()
        address = self.entry_address.get()
        email = self.entry_email.get()
        instagram = self.entry_instagram.get()
        facebook = self.entry_facebook.get()
        comment = self.entry_comment.get()
        group = self.group_var.get()
        is_favorite = self.favorite_var.get()

        if first_name and last_name and phone:
            contact = Contact(first_name, last_name, middle_name,
                              phone, birthday, address, email, instagram, facebook, comment, group, is_favorite)
            self.contacts.append(contact)
            self.update_contacts_listbox()
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
            self.clear_entry_fields()
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è, –§–∞–º–∏–ª–∏—è, –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")

    def save_all_contacts(self):
        if not self.contacts:
            messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
            return

        file_name = filedialog.asksaveasfilename(defaultextension=".xls", filetypes=[("Excel Files", "*.xls")])
        if file_name:
            workbook = xlwt.Workbook()
            sheet = workbook.add_sheet("–ö–æ–Ω—Ç–∞–∫—Ç—ã")

            headers = ["–ò–º—è", "–§–∞–º–∏–ª–∏—è", "–û—Ç—á–µ—Å—Ç–≤–æ", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è",
                       "Email", "Instagram", "Facebook", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "–ì—Ä—É–ø–ø–∞", "–ò–∑–±—Ä–∞–Ω–Ω—ã–π"]

            for col, header in enumerate(headers):
                sheet.write(0, col, header)

            for row, contact in enumerate(self.contacts, start=1):
                sheet.write(row, 0, contact.first_name)
                sheet.write(row, 1, contact.last_name)
                sheet.write(row, 2, contact.middle_name)
                sheet.write(row, 3, contact.phone)
                sheet.write(row, 4, contact.birthday)
                sheet.write(row, 5, contact.address)
                sheet.write(row, 6, contact.email)
                sheet.write(row, 7, contact.instagram)
                sheet.write(row, 8, contact.facebook)
                sheet.write(row, 9, contact.comment)
                sheet.write(row, 10, contact.group)
                sheet.write(row, 11, "–î–∞" if contact.is_favorite else "–ù–µ—Ç")

            workbook.save(file_name)
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–í—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {file_name}")

    def load_contacts_from_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("Excel Files", "*.xls")])
        if file_path:
            workbook = xlrd.open_workbook(file_path)
            sheet = workbook.sheet_by_index(0)

            headers = [sheet.cell_value(0, col) for col in range(sheet.ncols)]
            contacts = []

            translation = {
                "–ò–º—è": "first_name",
                "–§–∞–º–∏–ª–∏—è": "last_name",
                "–û—Ç—á–µ—Å—Ç–≤–æ": "middle_name",
                "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞": "phone",
                "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è": "birthday",
                "–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è": "address",
                "Email": "email",
                "Instagram": "instagram",
                "Facebook": "facebook",
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": "comment",
                "–ì—Ä—É–ø–ø–∞": "group",
                "–ò–∑–±—Ä–∞–Ω–Ω—ã–π": "is_favorite"
            }

            for row in range(1, sheet.nrows):
                contact_data = {translation.get(headers[col],
                                                headers[col]): sheet.cell_value(row, col) for col in range(sheet.ncols)}
                contact_data["is_favorite"] = contact_data.get("is_favorite", "–ù–µ—Ç") == "–î–∞"
                contact = Contact(**contact_data)
                contacts.append(contact)

            self.contacts = contacts
            self.update_contacts_listbox()
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ö–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞: {file_path}")

    def view_contacts(self):
        if not self.contacts:
            messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
            return

        view_window = tk.Toplevel(self.root)
        view_window.title("–°–ø–∏—Å–æ–∫ –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤")

        listbox = tk.Listbox(view_window)
        for contact in self.contacts:
            listbox.insert(tk.END, f"{contact.first_name}"
                                   f" {contact.last_name} {'‚òÖ' if contact.is_favorite else ''}")

        listbox.pack(expand=True, fill=tk.BOTH)

        def show_contact_info(event):
            selected_contact_index = listbox.curselection()
            if selected_contact_index:
                selected_contact = self.contacts[selected_contact_index[0]]
                info_window = tk.Toplevel(view_window)
                info_window.title("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ö–æ–Ω—Ç–∞–∫—Ç–µ")

                info_label = tk.Label(info_window, text=f"–ò–º—è: {selected_contact.first_name}\n"
                                                        f"–§–∞–º–∏–ª–∏—è: {selected_contact.last_name}\n"
                                                        f"–û—Ç—á–µ—Å—Ç–≤–æ: {selected_contact.middle_name}\n"
                                                        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {selected_contact.phone}\n"
                                                        f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {selected_contact.birthday}\n"
                                                        f"–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {selected_contact.address}\n"
                                                        f"Email: {selected_contact.email}\n"
                                                        f"Instagram: {selected_contact.instagram}\n"
                                                        f"Facebook: {selected_contact.facebook}\n"
                                                        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {selected_contact.comment}\n"
                                                        f"–ì—Ä—É–ø–ø–∞: {selected_contact.group}\n"
                                                        f"–ò–∑–±—Ä–∞–Ω–Ω—ã–π: {'–î–∞' if selected_contact.is_favorite else '–ù–µ—Ç'}")
                info_label.pack()

        listbox.bind("<Double-Button-1>", show_contact_info)

    def share_contact(self):
        if not self.contacts:
            messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
            return

        share_window = tk.Toplevel(self.root)
        share_window.title("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ö–æ–Ω—Ç–∞–∫—Ç–æ–º")

        listbox = tk.Listbox(share_window)
        for contact in self.contacts:
            listbox.insert(tk.END, f"{contact.first_name}"
                                   f" {contact.last_name} {'‚òÖ' if contact.is_favorite else ''}")

        listbox.pack(expand=True, fill=tk.BOTH)

        def share_contact_info(event):
            selected_contact_index = listbox.curselection()
            if selected_contact_index:
                selected_contact = self.contacts[selected_contact_index[0]]
                share_options = ["Instagram", "Facebook", "Telegram", "WhatsApp"]
                share_var = tk.StringVar(share_window)
                share_var.set(share_options[0])
                share_menu = tk.OptionMenu(share_window, share_var, *share_options)
                share_menu.pack()

                def perform_share():
                    selected_option = share_var.get()
                    share_text = f"–ò–º—è: {selected_contact.first_name}\n" \
                                 f"–§–∞–º–∏–ª–∏—è: {selected_contact.last_name}\n" \
                                 f"–û—Ç—á–µ—Å—Ç–≤–æ: {selected_contact.middle_name}\n" \
                                 f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {selected_contact.phone}\n" \
                                 f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {selected_contact.birthday}\n" \
                                 f"–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {selected_contact.address}\n" \
                                 f"Email: {selected_contact.email}\n" \
                                 f"Instagram: {selected_contact.instagram}\n" \
                                 f"Facebook: {selected_contact.facebook}\n" \
                                 f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {selected_contact.comment}\n" \
                                 f"–ì—Ä—É–ø–ø–∞: {selected_contact.group}\n" \
                                 f"–ò–∑–±—Ä–∞–Ω–Ω—ã–π: {'–î–∞' if selected_contact.is_favorite else '–ù–µ—Ç'}"

                    if selected_option == "Instagram":
                        messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Instagram:\n{share_text}")
                    elif selected_option == "Facebook":
                        messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Facebook:\n{share_text}")
                    elif selected_option == "Telegram":
                        messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:\n{share_text}")
                    elif selected_option == "WhatsApp":
                        messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ WhatsApp:\n{share_text}")

                share_button = tk.Button(share_window, text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", command=perform_share)
                share_button.pack()

        listbox.bind("<Double-Button-1>", share_contact_info)

    def add_contact(self):
        self.clear_entry_fields()
        self.current_contact_index = None

    def delete_contact(self):
        selected_contact_index = self.current_contact_index
        if selected_contact_index is not None:
            del self.contacts[selected_contact_index]
            self.update_contacts_listbox()
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —É–¥–∞–ª–µ–Ω!")
            self.clear_entry_fields()
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

    def edit_contact(self):
        selected_contact_index = self.current_contact_index
        if selected_contact_index is not None:
            selected_contact = self.contacts[selected_contact_index]
            self.entry_first_name.delete(0, tk.END)
            self.entry_last_name.delete(0, tk.END)
            self.entry_middle_name.delete(0, tk.END)
            self.entry_phone.delete(0, tk.END)
            self.entry_birthday.delete(0, tk.END)
            self.entry_address.delete(0, tk.END)
            self.entry_email.delete(0, tk.END)
            self.entry_instagram.delete(0, tk.END)
            self.entry_facebook.delete(0, tk.END)
            self.entry_comment.delete(0, tk.END)

            self.entry_first_name.insert(0, selected_contact.first_name)
            self.entry_last_name.insert(0, selected_contact.last_name)
            self.entry_middle_name.insert(0, selected_contact.middle_name)
            self.entry_phone.insert(0, selected_contact.phone)
            self.entry_birthday.insert(0, selected_contact.birthday)
            self.entry_address.insert(0, selected_contact.address)
            self.entry_email.insert(0, selected_contact.email)
            self.entry_instagram.insert(0, selected_contact.instagram)
            self.entry_facebook.insert(0, selected_contact.facebook)
            self.entry_comment.insert(0, selected_contact.comment)

            self.group_var.set(selected_contact.group)
            self.favorite_var.set(selected_contact.is_favorite)

            messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é")
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

    def clear_entry_fields(self):
        self.entry_first_name.delete(0, tk.END)
        self.entry_last_name.delete(0, tk.END)
        self.entry_middle_name.delete(0, tk.END)
        self.entry_phone.delete(0, tk.END)
        self.entry_birthday.delete(0, tk.END)
        self.entry_address.delete(0, tk.END)
        self.entry_email.delete(0, tk.END)
        self.entry_instagram.delete(0, tk.END)
        self.entry_facebook.delete(0, tk.END)
        self.entry_comment.delete(0, tk.END)
        self.group_var.set(self.group_options[0])
        self.favorite_var.set(False)

    def update_contacts_listbox(self):
        self.listbox.delete(0, tk.END)
        for contact in self.contacts:
            self.listbox.insert(tk.END, f"{contact.first_name}"
                                        f" {contact.last_name} {'‚òÖ' if contact.is_favorite else ''}")

    def select_contact(self, event):
        selected_contact_index = self.listbox.curselection()
        if selected_contact_index:
            self.current_contact_index = selected_contact_index[0]

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
app = ContactsApp(root)
root.geometry("265x580")  # –ò–∑–º–µ–Ω–µ–Ω–æ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
root.mainloop()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
1. –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫:
'''
import tkinter as tk
from tkinter import messagebox, filedialog
import xlwt
import xlrd
'''
tkinter - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤ Python.
messagebox - –º–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤—ã—Ö –æ–∫–æ–Ω —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.
filedialog - –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–æ–≤—ã–º–∏ –æ–∫–Ω–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤.
xlwt - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–∞ Excel.
xlrd - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ Excel.
'''
'''
2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ Contact:
'''
class Contact:
    def __init__(self, first_name, last_name, middle_name, phone, birthday, address,
                 email, instagram, facebook, comment, group, is_favorite=False):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        self.first_name = first_name
        self.last_name = last_name
        self.middle_name = middle_name
        self.phone = phone
        self.birthday = birthday
        self.address = address
        self.email = email
        self.instagram = instagram
        self.facebook = facebook
        self.comment = comment
        self.group = group
        self.is_favorite = is_favorite
'''
–ö–ª–∞—Å—Å Contact –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏.
'''
'''
3. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ ContactsApp:
'''
class ContactsApp:
    def __init__(self, root):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        self.contacts = []
        self.current_contact_index = None
        self.root = root
        self.root.title("–ú–æ–∏ –ö–æ–Ω—Ç–∞–∫—Ç—ã")

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ (–ª–µ–π–±–ª–æ–≤, –ø–æ–ª–µ–π –≤–≤–æ–¥–∞, –∫–Ω–æ–ø–æ–∫ –∏ –¥—Ä.)
        # ...
'''
–ö–ª–∞—Å—Å ContactsApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è,
 –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –≤–≤–æ–¥–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞.
'''
'''
4. –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
'''
# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
app = ContactsApp(root)
root.geometry("265x580")  # –ò–∑–º–µ–Ω–µ–Ω–æ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
root.mainloop()
'''
–°–æ–∑–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç Tk (–≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è).
–ó–∞–¥–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª Tkinter (mainloop).
'''
'''
5. –ú–µ—Ç–æ–¥ save_contact:
'''
def save_contact(self):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    first_name = self.entry_first_name.get()
    last_name = self.entry_last_name.get()
    # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã)

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Contact –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    if first_name and last_name and phone:
        contact = Contact(first_name, last_name, middle_name, phone, birthday,
                          address, email, instagram, facebook, comment, group, is_favorite)
        self.contacts.append(contact)
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –≤–∏–¥–∂–µ—Ç–µ Listbox
        self.update_contacts_listbox()
        messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        self.clear_entry_fields()
    else:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è, –§–∞–º–∏–ª–∏—è, –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
'''
–ú–µ—Ç–æ–¥ save_contact –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.
–ü–æ–ª—É—á–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞.
–°–æ–∑–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç Contact –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤–∏–¥–∂–µ—Ç Listbox –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.
–û—á–∏—â–∞—é—Ç—Å—è –ø–æ–ª—è –≤–≤–æ–¥–∞.
'''
'''
6. –ú–µ—Ç–æ–¥ save_all_contacts:
'''
def save_all_contacts(self):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç
    if not self.contacts:
        messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
        return

    # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    file_name = filedialog.asksaveasfilename(defaultextension=".xls", filetypes=[("Excel Files", "*.xls")])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞
    if file_name:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–∏–≥–∏ Excel
        workbook = xlwt.Workbook()
        sheet = workbook.add_sheet("–ö–æ–Ω—Ç–∞–∫—Ç—ã")

        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
        headers = ["–ò–º—è", "–§–∞–º–∏–ª–∏—è", "–û—Ç—á–µ—Å—Ç–≤–æ", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è",
                   "Email", "Instagram", "Facebook", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "–ì—Ä—É–ø–ø–∞", "–ò–∑–±—Ä–∞–Ω–Ω—ã–π"]

        # –ó–∞–ø–∏—Å—å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –≤ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        for col, header in enumerate(headers):
            sheet.write(0, col, header)

        # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —è—á–µ–π–∫–∏
        for row, contact in enumerate(self.contacts, start=1):
            sheet.write(row, 0, contact.first_name)
            sheet.write(row, 1, contact.last_name)
            # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ Excel
        workbook.save(file_name)
        messagebox.showinfo("–£—Å–ø–µ—Ö", f"–í—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {file_name}")
'''
–ú–µ—Ç–æ–¥ save_all_contacts –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ñ–∞–π–ª Excel.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç.
–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
–°–æ–∑–¥–∞–µ—Ç—Å—è –∫–Ω–∏–≥–∞ Excel –∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –Ω–µ–µ.
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ñ–∞–π–ª Excel.
'''
'''
7. –ú–µ—Ç–æ–¥ load_contacts_from_file:
'''
def load_contacts_from_file(self):
    # –ó–∞–ø—Ä–æ—Å –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    file_path = filedialog.askopenfilename(filetypes=[("Excel Files", "*.xls")])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –±—ã–ª –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª
    if file_path:
        # –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–Ω–∏–≥–∏ Excel
        workbook = xlrd.open_workbook(file_path)
        sheet = workbook.sheet_by_index(0)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å—Ç–æ–ª–±—Ü–æ–≤
        headers = [sheet.cell_value(0, col) for col in range(sheet.ncols)]
        contacts = []

        # –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –∫–ª–∞—Å—Å–∞ Contact
        translation = {
            "–ò–º—è": "first_name",
            "–§–∞–º–∏–ª–∏—è": "last_name",
            # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã)
        }

        # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ Contact
        for row in range(1, sheet.nrows):
            contact_data = {translation.get(headers[col], headers[col]): sheet.cell_value(row, col) for
                            col in range(sheet.ncols)}
            contact_data["is_favorite"] = contact_data.get("is_favorite", "–ù–µ—Ç") == "–î–∞"
            contact = Contact(**contact_data)
            contacts.append(contact)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.contacts = contacts
        self.update_contacts_listbox()
        messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ö–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞: {file_path}")
'''
–ú–µ—Ç–æ–¥ load_contacts_from_file –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ Excel.
–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.
–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–Ω–∏–≥–∞ Excel, —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –∫–ª–∞—Å—Å–∞ Contact.
–ß–∏—Ç–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã Contact.
–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.
'''
'''
8. –ú–µ—Ç–æ–¥ view_contacts:
'''
def view_contacts(self):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç
    if not self.contacts:
        messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    view_window = tk.Toplevel(self.root)
    view_window.title("–°–ø–∏—Å–æ–∫ –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤")

    # –°–æ–∑–¥–∞–Ω–∏–µ Listbox –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏
    listbox = tk.Listbox(view_window)
    for contact in self.contacts:
        listbox.insert(tk.END, f"{contact.first_name} {contact.last_name}"
                               f" {'‚òÖ' if contact.is_favorite else ''}")

    # –†–∞–∑–º–µ—â–µ–Ω–∏–µ Listbox –Ω–∞ –æ–∫–Ω–µ
    listbox.pack(expand=True, fill=tk.BOTH)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
    def show_contact_info(event):
        selected_contact_index = listbox.curselection()
        if selected_contact_index:
            selected_contact = self.contacts[selected_contact_index[0]]
            info_window = tk.Toplevel(view_window)
            info_window.title("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ö–æ–Ω—Ç–∞–∫—Ç–µ")

            # –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ Label —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
            info_label = tk.Label(info_window, text=f"–ò–º—è: {selected_contact.first_name}\n"
                                                    f"–§–∞–º–∏–ª–∏—è: {selected_contact.last_name}\n"
                                                    f"–û—Ç—á–µ—Å—Ç–≤–æ: {selected_contact.middle_name}\n"
                                                    # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã)
                                                    f"–ò–∑–±—Ä–∞–Ω–Ω—ã–π: {'–î–∞' if selected_contact.is_favorite else '–ù–µ—Ç'}")
            info_label.pack()

    # –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫ —Å–æ–±—ã—Ç–∏—é (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫) –Ω–∞ Listbox
    listbox.bind("<Double-Button-1>", show_contact_info)
'''
–ú–µ—Ç–æ–¥ view_contacts —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–°–æ–∑–¥–∞–µ—Ç—Å—è –≤–∏–¥–∂–µ—Ç Listbox –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–§—É–Ω–∫—Ü–∏—è show_contact_info –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–µ, —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤–æ–µ –æ–∫–Ω–æ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
'''
'''
9. –ú–µ—Ç–æ–¥ share_contact:
'''
def share_contact(self):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç
    if not self.contacts:
        messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—É—Å—Ç.")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
    share_window = tk.Toplevel(self.root)
    share_window.title("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ö–æ–Ω—Ç–∞–∫—Ç–æ–º")

    # –°–æ–∑–¥–∞–Ω–∏–µ Listbox –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏
    listbox = tk.Listbox(share_window)
    for contact in self.contacts:
        listbox.insert(tk.END, f"{contact.first_name} "
                               f"{contact.last_name} {'‚òÖ' if contact.is_favorite else ''}")

    # –†–∞–∑–º–µ—â–µ–Ω–∏–µ Listbox –Ω–∞ –æ–∫–Ω–µ
    listbox.pack(expand=True, fill=tk.BOTH)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
    def share_contact_info(event):
        selected_contact_index = listbox.curselection()
        if selected_contact_index:
            selected_contact = self.contacts[selected_contact_index[0]]
            share_options = ["Instagram", "Facebook", "Telegram", "WhatsApp"]
            share_var = tk.StringVar(share_window)
            share_var.set(share_options[0])
            share_menu = tk.OptionMenu(share_window, share_var, *share_options)
            share_menu.pack()

            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
            def perform_share():
                selected_option = share_var.get()
                share_text = f"–ò–º—è: {selected_contact.first_name}\n" \
                             f"–§–∞–º–∏–ª–∏—è: {selected_contact.last_name}\n" \
                             # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã) \
                             f"–ò–∑–±—Ä–∞–Ω–Ω—ã–π: {'–î–∞' if selected_contact.is_favorite else '–ù–µ—Ç'}"

                # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏
                if selected_option == "Instagram":
                    messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Instagram:\n{share_text}")
                elif selected_option == "Facebook":
                    messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Facebook:\n{share_text}")
                elif selected_option == "Telegram":
                    messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:\n{share_text}")
                elif selected_option == "WhatsApp":
                    messagebox.showinfo("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ WhatsApp:\n{share_text}")

            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
            share_button = tk.Button(share_window, text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", command=perform_share)
            share_button.pack()

    # –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫ —Å–æ–±—ã—Ç–∏—é (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫) –Ω–∞ Listbox
    listbox.bind("<Double-Button-1>", share_contact_info)
'''
–ú–µ—Ç–æ–¥ share_contact —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.
–°–æ–∑–¥–∞–µ—Ç—Å—è –≤–∏–¥–∂–µ—Ç Listbox –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–§—É–Ω–∫—Ü–∏—è share_contact_info –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–µ,
—Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤–æ–µ –æ–∫–Ω–æ —Å –æ–ø—Ü–∏—è–º–∏ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è (Instagram, Facebook, Telegram, WhatsApp).
'''
'''
10. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
'''
'''
–ú–µ—Ç–æ–¥—ã add_contact, delete_contact, edit_contact –∏ clear_entry_fields –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞,
—É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
–ú–µ—Ç–æ–¥ update_contacts_listbox –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–¥–∂–µ—Ç Listbox, –æ—Ç–æ–±—Ä–∞–∂–∞—è —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–ú–µ—Ç–æ–¥ select_contact –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ Listbox –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞.
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
–í–ê–†–ò–ê–ù–¢ 2
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
–ö–û–î:
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
import sys
import pandas as pd
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLineEdit, QPushButton, QLabel, \
    QFileDialog, QInputDialog, QTableWidget, QTableWidgetItem
from PyQt6.QtGui import QPixmap
from PIL import Image


class ContactListApp(QWidget):
    def __init__(self):
        super().__init__()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        self.contacts = pd.DataFrame(
            columns=['Name', 'Phone', 'Birthdate', 'Address', 'Email', 'Comment', 'Group', 'Favorite', 'Photo Path'])

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.init_ui()

    def init_ui(self):
        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.name_label = QLabel('–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ:')
        self.name_entry = QLineEdit()
        self.phone_label = QLabel('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
        self.phone_entry = QLineEdit()
        self.birthdate_label = QLabel('–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:')
        self.birthdate_entry = QLineEdit()
        self.address_label = QLabel('–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:')
        self.address_entry = QLineEdit()
        self.email_label = QLabel('Email –∞–¥—Ä–µ—Å:')
        self.email_entry = QLineEdit()
        self.comment_label = QLabel('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:')
        self.comment_entry = QLineEdit()

        self.group_button = QPushButton('–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É')
        self.favorite_button = QPushButton('‚òÖ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ')
        self.share_button = QPushButton('üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è')
        self.edit_button = QPushButton('‚úé –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
        self.photo_button = QPushButton('üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ')
        self.add_button = QPushButton('+ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç')

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        self.contact_table = QTableWidget()
        self.contact_table.setColumnCount(len(self.contacts.columns))
        self.contact_table.setHorizontalHeaderLabels(self.contacts.columns)

        self.delete_button = QPushButton('√ó –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç')
        self.load_button = QPushButton('ü¢Å –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞')
        self.sort_button = QPushButton('‚áï –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≥—Ä—É–ø–ø–∞–º')

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        self.save_button = QPushButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª')
        self.load_excel_button = QPushButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ (Excel)')
        self.load_word_button = QPushButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ (Word)')

        # –†–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∫–æ–º–ø–æ–Ω–æ–≤–∫–µ
        vbox = QVBoxLayout()
        vbox.addWidget(self.name_label)
        vbox.addWidget(self.name_entry)
        vbox.addWidget(self.phone_label)
        vbox.addWidget(self.phone_entry)
        vbox.addWidget(self.birthdate_label)
        vbox.addWidget(self.birthdate_entry)
        vbox.addWidget(self.address_label)
        vbox.addWidget(self.address_entry)
        vbox.addWidget(self.email_label)
        vbox.addWidget(self.email_entry)
        vbox.addWidget(self.comment_label)
        vbox.addWidget(self.comment_entry)
        vbox.addWidget(self.group_button)
        vbox.addWidget(self.favorite_button)
        vbox.addWidget(self.share_button)
        vbox.addWidget(self.edit_button)
        vbox.addWidget(self.photo_button)
        vbox.addWidget(self.add_button)
        vbox.addWidget(self.contact_table)
        vbox.addWidget(self.delete_button)
        vbox.addWidget(self.load_button)
        vbox.addWidget(self.sort_button)
        vbox.addWidget(self.save_button)
        vbox.addWidget(self.load_excel_button)
        vbox.addWidget(self.load_word_button)

        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–æ–º–ø–æ–Ω–æ–≤–∫—É –≤–∏–¥–∂–µ—Ç—É
        self.setLayout(vbox)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.add_button.clicked.connect(self.add_contact)
        self.delete_button.clicked.connect(self.delete_contact)
        self.load_button.clicked.connect(self.load_contacts)
        self.sort_button.clicked.connect(self.sort_contacts)
        self.group_button.clicked.connect(self.choose_group)
        self.favorite_button.clicked.connect(self.toggle_favorite)
        self.share_button.clicked.connect(self.share_contact)
        self.edit_button.clicked.connect(self.edit_contact)
        self.photo_button.clicked.connect(self.add_photo)
        self.save_button.clicked.connect(self.save_contacts)

    def add_photo(self):
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É
        selected_item = self.contact_table.currentItem()
        if selected_item:
            row = selected_item.row()
            file_path, _ = QFileDialog.getOpenFileName(self, '–í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '',
                                                       'Images (*.png *.jpg *.bmp *.gif *.jpeg)')
            if file_path:
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ –≤ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞
                self.contacts.at[row, 'Photo Path'] = file_path
                self.update_contact_table()

    def add_contact(self):
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
        name = self.name_entry.text()
        phone = self.phone_entry.text()
        birthdate = self.birthdate_entry.text()
        address = self.address_entry.text()
        email = self.email_entry.text()
        comment = self.comment_entry.text()
        group = self.group_button.text()
        favorite = '‚òÖ' if self.favorite_button.isChecked() else ''
        photo_path = None

        if name:
            new_contact = pd.DataFrame({'Name': [name],
                                        'Phone': [phone],
                                        'Birthdate': [birthdate],
                                        'Address': [address],
                                        'Email': [email],
                                        'Comment': [comment],
                                        'Group': [group],
                                        'Favorite': [favorite],
                                        'Photo Path': [photo_path]})

            self.contacts = pd.concat([self.contacts, new_contact], ignore_index=True)
            self.update_contact_table()

            # –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
            self.clear_input_fields()

    def delete_contact(self):
        # –£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
        selected_item = self.contact_table.currentItem()
        if selected_item:
            row = selected_item.row()
            self.contacts = self.contacts.drop(index=row)
            self.update_contact_table()

    def save_contacts(self):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–∞–π–ª
        file_path, _ = QFileDialog.getSaveFileName(self, '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª', '', 'All files (*)')

        if file_path:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            file_extension = file_path.split('.')[-1].lower()

            if file_extension == 'json':
                self.save_contacts_json(file_path)
            elif file_extension in ['xlsx', 'xls']:
                self.save_contacts_excel(file_path)
            elif file_extension in ['doc', 'docx']:
                self.save_contacts_word(file_path)

    def save_contacts_json(self, file_path):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
        self.contacts.to_json(file_path, orient='records', lines=True)

    def save_contacts_excel(self, file_path):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel
        self.contacts.to_excel(file_path, index=False)

    def save_contacts_word(self, file_path):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Word
        doc = Document()

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        doc.add_heading('Contact List', level=1)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        for _, contact in self.contacts.iterrows():
            doc.add_paragraph(f"Name: {contact['Name']}")
            doc.add_paragraph(f"Phone: {contact['Phone']}")
            doc.add_paragraph(f"Birthdate: {contact['Birthdate']}")
            doc.add_paragraph(f"Address: {contact['Address']}")
            doc.add_paragraph(f"Email: {contact['Email']}")
            doc.add_paragraph(f"Comment: {contact['Comment']}")
            doc.add_paragraph(f"Group: {contact['Group']}")
            doc.add_paragraph(f"Favorite: {contact['Favorite']}")
            doc.add_paragraph(f"Photo Path: {contact['Photo Path']}")

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –º–µ–∂–¥—É –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            doc.add_paragraph()

        doc.save(file_path)

    def load_contacts(self):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞
        file_path, _ = QFileDialog.getOpenFileName(self, '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª', '', 'All files (*)')

        if file_path:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            file_extension = file_path.split('.')[-1].lower()

            if file_extension == 'json':
                self.load_contacts_json(file_path)
            elif file_extension in ['xlsx', 'xls']:
                self.load_contacts_excel(file_path)
            elif file_extension in ['doc', 'docx']:
                self.load_contacts_word(file_path)

    def load_contacts_json(self, file_path):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ JSON
        self.contacts = pd.read_json(file_path, orient='records', lines=True)
        self.update_contact_table()

    def load_contacts_excel(self, file_path):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ Excel
        self.contacts = pd.read_excel(file_path)
        self.update_contact_table()

    def load_contacts_word(self, file_path):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ Word
        doc = Document(file_path)

        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        self.contacts = pd.DataFrame(
            columns=['Name', 'Phone', 'Birthdate', 'Address', 'Email', 'Comment', 'Group', 'Favorite', 'Photo Path'])

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞
        for paragraph in doc.paragraphs:
            if paragraph.text.startswith('Name:'):
                contact_info = {
                    'Name': paragraph.text.split(': ')[1],
                    'Phone': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Birthdate': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Address': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Email': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Comment': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Group': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Favorite': doc.paragraphs.pop(0).text.split(': ')[1],
                    'Photo Path': doc.paragraphs.pop(0).text.split(': ')[1]
                }
                self.contacts = pd.concat([self.contacts, pd.DataFrame([contact_info])], ignore_index=True)

        self.update_contact_table()

    def sort_contacts(self):
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ –≥—Ä—É–ø–ø–∞–º
        self.contacts.sort_values(by='Group', inplace=True)
        self.update_contact_table()

    def choose_group(self):
        # –í—ã–±–∏—Ä–∞–µ–º –≥—Ä—É–ø–ø—É –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
        group, _ = QInputDialog.getText(self, '–í—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:')
        if group:
            self.group_button.setText(group)

    def toggle_favorite(self):
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        if self.favorite_button.text() == '‚òÖ':
            self.favorite_button.setText('')
        else:
            self.favorite_button.setText('‚òÖ')

    def share_contact(self):
        # –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è" –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
        selected_item = self.contact_table.currentItem()
        if selected_item:
            row = selected_item.row()
            contact_info = self.contacts.iloc[row]
            # –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ–¥ –¥–ª—è "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è" –∫–æ–Ω—Ç–∞–∫—Ç–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—á—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞

    def edit_contact(self):
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
        selected_item = self.contact_table.currentItem()
        if selected_item:
            row = selected_item.row()
            contact_info = self.contacts.iloc[row]

            # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ contact_info
            # –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø–æ–ª–µ–π.

    def update_contact_table(self):
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ
        self.contact_table.setRowCount(0)
        for index, contact in self.contacts.iterrows():
            self.contact_table.insertRow(index)
            for col_index, value in enumerate(contact):
                self.contact_table.setItem(index, col_index, QTableWidgetItem(str(value)))

    def clear_input_fields(self):
        # –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
        self.name_entry.clear()
        self.phone_entry.clear()
        self.birthdate_entry.clear()
        self.address_entry.clear()
        self.email_entry.clear()
        self.comment_entry.clear()


if __name__ == '__main__':
    try:
        app = QApplication(sys.argv)
        window = ContactListApp()
        window.show()
        sys.exit(app.exec())
    except Exception as e:
        print(f"An exception occurred: {e}")
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
'''
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫:
'''
import sys
import pandas as pd
from PyQt6.QtWidgets import (QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLineEdit,
                             QPushButton, QLabel, QFileDialog, QInputDialog, QTableWidget, QTableWidgetItem)
from PyQt6.QtGui import QPixmap
from PIL import Image
'''
sys - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–æ–¥—É–ª—å Python –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º Python.
pandas - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã (DataFrame).
PyQt6 - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.
PIL.Image - –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
'''
'''
–ö–ª–∞—Å—Å ContactListApp:
'''
class ContactListApp(QWidget):
    def __init__(self):
        super().__init__()
        self.contacts = pd.DataFrame(columns=['Name', 'Phone', 'Birthdate', 'Address',
                                              'Email', 'Comment', 'Group', 'Favorite', 'Photo Path'])
        self.init_ui()
'''
–°–æ–∑–¥–∞–µ—Ç—Å—è –∫–ª–∞—Å—Å ContactListApp, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç QWidget.
–í –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø—É—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pandas.
'''
'''
–ú–µ—Ç–æ–¥ init_ui:
'''
def init_ui(self):
    # ... (—Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤)
    self.setLayout(vbox)
    self.add_button.clicked.connect(self.add_contact)
    self.delete_button.clicked.connect(self.delete_contact)
    # ... (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π)
'''
–°–æ–∑–¥–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ init_ui, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 –∏ –∏—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –∫–æ–º–ø–æ–Ω–æ–≤–∫–µ.
–°–æ–∑–¥–∞—é—Ç—Å—è –≤–∏–¥–∂–µ—Ç—ã (–º–µ—Ç–∫–∏, –ø–æ–ª—è –≤–≤–æ–¥–∞, –∫–Ω–æ–ø–∫–∏, —Ç–∞–±–ª–∏—Ü–∞) –∏ —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è –≤ –∫–æ–º–ø–æ–Ω–æ–≤–∫–µ vbox.
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫.
'''
'''
–ú–µ—Ç–æ–¥—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
'''
'''
add_photo: –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É.
add_contact: –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
delete_contact: —É–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç.
save_contacts: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–∞–π–ª —Ä–∞–∑–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (JSON, Excel, Word).
load_contacts: –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞.
sort_contacts: —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ –≥—Ä—É–ø–ø–∞–º.
choose_group: –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞.
toggle_favorite: –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.
share_contact: –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è" –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.
edit_contact: —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç.
'''
'''
–ú–µ—Ç–æ–¥ update_contact_table:
'''
def update_contact_table(self):
    self.contact_table.setRowCount(0)
    for index, contact in self.contacts.iterrows():
        self.contact_table.insertRow(index)
        for col_index, value in enumerate(contact):
            self.contact_table.setItem(index, col_index, QTableWidgetItem(str(value)))
'''
–ú–µ—Ç–æ–¥ update_contact_table –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ QTableWidget.
–î–ª—è —ç—Ç–æ–≥–æ –æ–Ω –æ—á–∏—â–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É (setRowCount(0)) –∏ –∑–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∏–∑ DataFrame.
'''
'''
–ú–µ—Ç–æ–¥ clear_input_fields:
'''
def clear_input_fields(self):
    self.name_entry.clear()
    self.phone_entry.clear()
    self.birthdate_entry.clear()
    self.address_entry.clear()
    self.email_entry.clear()
    self.comment_entry.clear()
'''
clear_input_fields –æ—á–∏—â–∞–µ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞.
'''
'''
–ë–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
'''
if __name__ == '__main__':
    try:
        app = QApplication(sys.argv)
        window = ContactListApp()
        window.show()
        sys.exit(app.exec())
    except Exception as e:
        print(f"An exception occurred: {e}")
'''
–ï—Å–ª–∏ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, —Å–æ–∑–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (QApplication),
 —Å–æ–∑–¥–∞–µ—Ç—Å—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π (app.exec()).
–í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~